#!/bin/bash

# Setup GitHub Secrets for Atlas Codex CI/CD
# This script helps you configure the necessary secrets in GitHub

echo "üîê Atlas Codex - GitHub Secrets Setup"
echo "====================================="
echo ""
echo "You need to add the following secrets to your GitHub repository:"
echo "Go to: https://github.com/coreydylan/atlascodex/settings/secrets/actions"
echo ""
echo "Required Secrets:"
echo "-----------------"
echo ""
echo "1. AWS_ACCESS_KEY_ID"
echo "   Your AWS access key for deployments"
echo "   Current IAM user should have Lambda and API Gateway permissions"
echo ""
echo "2. AWS_SECRET_ACCESS_KEY"
echo "   Your AWS secret access key"
echo ""
echo "3. OPENAI_API_KEY"
echo "   Your OpenAI API key (starts with sk-proj-...)"
echo "   Get from: https://platform.openai.com/api-keys"
echo ""
echo "4. DEV_MASTER_API_KEY"
echo "   API key for development environment"
echo "   Suggested: $(openssl rand -hex 32)"
echo ""
echo "5. PROD_MASTER_API_KEY"
echo "   API key for production environment (keep this very secure!)"
echo "   Suggested: $(openssl rand -hex 32)"
echo ""
echo "Optional Secrets:"
echo "-----------------"
echo ""
echo "6. SLACK_WEBHOOK (optional)"
echo "   For deployment notifications"
echo "   Get from: https://api.slack.com/messaging/webhooks"
echo ""
echo "GitHub CLI Method (if you have gh installed):"
echo "----------------------------------------------"
echo ""
echo "# Set secrets using GitHub CLI"
echo "gh secret set AWS_ACCESS_KEY_ID"
echo "gh secret set AWS_SECRET_ACCESS_KEY"
echo "gh secret set OPENAI_API_KEY"
echo "gh secret set DEV_MASTER_API_KEY"
echo "gh secret set PROD_MASTER_API_KEY"
echo ""
echo "Environment Protection Rules:"
echo "-----------------------------"
echo ""
echo "1. Go to Settings ‚Üí Environments"
echo "2. Create 'development' environment"
echo "   - No protection rules needed"
echo "3. Create 'production' environment"
echo "   - Add protection rules:"
echo "   - Required reviewers: 1"
echo "   - Restrict to protected branches only"
echo ""
echo "Branch Protection:"
echo "------------------"
echo ""
echo "1. Protect 'main' branch:"
echo "   - Require PR before merging"
echo "   - Require status checks (CI tests)"
echo "   - Include administrators"
echo ""
echo "2. Create and protect 'production' branch:"
echo "   - Require PR from main only"
echo "   - Require approval from code owners"
echo "   - Require up-to-date branches"
echo ""
echo "Ready to proceed? (y/n): "
read -r response

if [[ "$response" == "y" ]]; then
    echo ""
    echo "‚úÖ Great! Here's what will happen:"
    echo ""
    echo "1. Push to 'main' branch ‚Üí Deploys to Development"
    echo "2. Push to 'production' branch ‚Üí Deploys to Production (with canary)"
    echo "3. Pull Requests ‚Üí Run tests only"
    echo "4. Manual trigger ‚Üí Emergency rollback available"
    echo ""
    echo "Next steps:"
    echo "1. Add the secrets to GitHub"
    echo "2. Create the production branch: git checkout -b production"
    echo "3. Push both branches: git push origin main production"
    echo "4. Your CI/CD pipeline will be active!"
fi